/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -m -p application_interface /works/packages/libqtxdg/trunk/core/source/libqtxdg-3.7.1/src/qtxdg/dbus/org.freedesktop.Application.xml
 *
 * qdbusxml2cpp is Copyright (C) 2020 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef APPLICATION_INTERFACE_H
#define APPLICATION_INTERFACE_H

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>

/*
 * Proxy class for interface org.freedesktop.Application
 */
class OrgFreedesktopApplicationInterface: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "org.freedesktop.Application"; }

public:
    OrgFreedesktopApplicationInterface(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = nullptr);

    ~OrgFreedesktopApplicationInterface();

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<> Activate(const QVariantMap &platform_data)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(platform_data);
        return asyncCallWithArgumentList(QStringLiteral("Activate"), argumentList);
    }

    inline QDBusPendingReply<> ActivateAction(const QString &action_name, const QVariantList &parameter, const QVariantMap &platform_data)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(action_name) << QVariant::fromValue(parameter) << QVariant::fromValue(platform_data);
        return asyncCallWithArgumentList(QStringLiteral("ActivateAction"), argumentList);
    }

    inline QDBusPendingReply<> Open(const QStringList &uris, const QVariantMap &platform_data)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(uris) << QVariant::fromValue(platform_data);
        return asyncCallWithArgumentList(QStringLiteral("Open"), argumentList);
    }

Q_SIGNALS: // SIGNALS
};

namespace org {
  namespace freedesktop {
    typedef ::OrgFreedesktopApplicationInterface Application;
  }
}
#endif
